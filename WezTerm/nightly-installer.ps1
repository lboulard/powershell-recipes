$ErrorActionPreference = "Stop"

$root = Get-Location

$filenameRegex = '^Wezterm-windows-(?<version>\d{8}-\d+-[0-9a-f]+)$'

$nightly = Join-Path $root "nightly"
$archive = Join-Path $nightly "WezTerm-windows-nightly.zip" -Resolve

$dest = Join-Path $root "build"

if (-not (Test-Path $dest -PathType Container)) {
  New-Item $dest -ItemType Directory -Force | Out-Null
}

## Breaks on multifile archive
# Expand-Archive -DestinationPath $dest -LiteralPath $archive -Force

if ($false) {
  $shell = New-Object -ComObject "Shell.Application"
  # requires absolute path
  $zipFolder = $shell.NameSpace($archive)
  if (-not $zipFolder) {
    throw "${archive}: failed to access using Explorer Shell.Application"
  }
  $item = $zipFolder.Items() | Where-Object { $_.name -Match $filenameRegex }
  if (-not $item) {
    throw "${archive}: distribution folder not found inside"
  }

  # FOF_SILENT                 0x0004
  # FOF_NOCONFIRMATION         0x0010
  # FOF_NOCONFIRMMKDIR         0x0200
  # FOF_NOERRORUI              0x0400
  # FOF_NO_UI                   (FOF_SILENT | FOF_NOCONFIRMATION | FOF_NOERRORUI | FOF_NOCONFIRMMKDIR)
  $dest = Resolve-Path $dest
  $shell.NameSpace($dest).CopyHere($item, 0x0614)
}

$workDir = Join-Path $dest "tmp"
New-Item -Path $workDir -ItemType Directory -Force | Out-Null

Push-Location $workDir
try {
  Write-Host " âœ“ " -NoNewline -ForegroundColor Green
  Write-Host "${archive}: expand to ${dest}"
  & 7z x -tzip -y $archive
  if ($LASTEXITCODE) {
    throw "${archive}: execution failed with exit code ${LASTEXITCODE}"
  }
} finally {
  Pop-Location
}

# find last version
$lastVersion = Get-ChildItem $Workdir -Directory | Select-Object -ExpandProperty Name | ForEach-Object {
  if ($_ -match $filenameRegex) {
    $Matches.version
  }
} | Sort-Object -Descending | Select-Object -First 1

if (-not $lastVersion) {
  [Console]::Error.WriteLine($json)
  throw "no folder versions found"
}

$name = "WezTerm-windows-$lastVersion"

try {
  if (Test-Path (Join-Path $dest $name)) {
    throw "$name`: already exists"
  } else {
    Move-Item -Path (Join-Path $workDir $name) -Destination $dest
  }
} finally {
  Remove-Item $workDir -Recurse -Force | Out-Null
}

$filename = "nightly-version.inc.iss"
Write-Host "Creating '$filename' for $lastVersion"
@(
  "// autogenerated"
  "#define WezTermFolder `"$(Join-Path $dest Wezterm-windows-${lastVersion})`""
  "#define WezTermVersion `"${lastVersion}`""
) -join "`n" | Set-Content -Path $filename -Encoding UTF8 -Force
